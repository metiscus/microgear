- When updating the home location, also specify a direciton of travel

- Add waypoints that are relative to "home" and are updated automatically
  when the home location is updated.

- Make a *copy* of next waypoint and follow that, rather than following the
  record at the front of the queue.  This lets us update waypoints "on the
  fly" i.e. relative to a new home position.  Hmmm, but what happens if we
  power on, get our first relative waypoint, and then sit around for a *long*
  time before we launch, then the first waypoint could be way off and not
  what we want or expect?

  If we just follow the first waypoint in the queue, how do we deal with a
  situation where the waypoint jumps out from under the uas and the new
  position forces a "miss"?  Do we live with the uas looping around and trying
  again?  Maybe this will be a rare problem?

- Make "GoHome" on lost comm link timeout configurable

- ground station sends up true date so gumstix can set it's clock properly

- have "home" location selection write an entry to debug.txt
- don't write FollowRoute to debug each time we receive a message.

- Add update rate (ahrs/nav/etc.) values to the health structure so the
  ground station can evaluate the performance of the onboard computer.

- Add an altitude estimator based on the pressure sensor, but
  corrected over time by an average of the (gps - pressure) error.

x Add return / command direction across serial connection.

x add config file

x Autopilot!

x 2/14/2007: Better libstdc++ solution on stargate (hate to static link) :-(
  - copy libstdc++.so.5.0.5 and libgcc_s.so.1 from build tree
  - then we can dynamically link the ugear executable so it is a small upload
    and it will run on the host.
  - Not sure what else might break when libgcc_s.so.1 is replaced with a
    newer version, so heads up and eyes open ...

x 2/13/2007: Port property system to the arm (?piggy?)

x 2/13/2007: Port xml reader to the arm (?piggy?)

x 2/12/2007: Make MNAV serial device selectable from the command line

